{"version":3,"sources":["App/app.module.scss","components/MovieCard/movie-card.module.scss","components/Logo/logo.module.scss","App/Search/Suggestion/suggestion.module.scss","store/actions/search-actions.js","store/actions/movie-actions.js","store/reducers/movie-library-reducer.js","store/selectors/search-selectors.js","store/selectors/movie-selectors.js","components/MovieCard/movie-card-component.js","App/Search/Suggestion/suggestion-component.js","App/Search/search-component.js","components/Logo/logo-component.js","components/Category/category-component.js","App/app-component.js","store/containers/app-container.js","store/effects/movie-effect.js","store/effects/search-effect.js","index.js","components/Category/category.module.scss","App/Search/search.module.scss"],"names":["module","exports","SEARCH","addToFavoritesSucces","movie","type","payload","addToWatchSuccess","initialState","search","isSearching","fetched","movieSelected","undefined","isFetching","userMovies","userMoviesFav","getFetched","state","getIsSearching","getMovieList","getFavList","MovieCard","props","background","backgroundImage","url","style","className","movieCard","isFetchinCover","fetching","spacer","src","alt","title","Suggestion","requiredWitdh","card","cardContainer","year","actions","addToLibrary","addToLibraryFav","console","log","suggestion","icon","unseen","star","onClick","watched","seen","defaultProps","Search","useState","searchTerm","setSearchTerm","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","searchMovies","suggestionActions","addToFavorites","suggestions","status","map","key","id","suggestionContainer","length","deleteSearch","clearSearch","section","form","formInput","placeholder","onChange","e","target","name","autoComplete","Logo","logo","process","Category","categoryName","isSeen","header","seenHeader","headerSpan","seenSpan","movies","list","movieContainer","movie_id","moviesContainer","App","toWatchCategories","favCategories","searchActions","searchClear","navbar","category","toWatch","backImg","main","mapDispatchToProps","dispatch","a","movieTitle","opt","method","fetch","then","r","json","results","filter","original_language","original_title","release_date","substring","poster_path","catch","connect","movieLibrary","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","newState","movieId","find","alreadyIn","forEach","m","push","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ed35c1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"app_navbar__3TrHG\",\"main\":\"app_main__39i7O\",\"backImg\":\"app_backImg__3GD5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"movie-card_movieCard__2gDLa\",\"spacer\":\"movie-card_spacer___ziAg\",\"fetching\":\"movie-card_fetching__1OD0E\",\"spinner\":\"movie-card_spinner__2Zu2t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"logo_logo__hjJjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"suggestion\":\"suggestion_suggestion__3g9y9\",\"title\":\"suggestion_title__1IRUf\",\"cardContainer\":\"suggestion_cardContainer__qhy20\",\"icon\":\"suggestion_icon__3mc9W\",\"unseen\":\"suggestion_unseen__3se1c\",\"seen\":\"suggestion_seen__3HVto\",\"star\":\"suggestion_star__g6A2N\"};","\nexport const SEARCH_CLEAR = \"search/CLEAR\";\nexport const SEARCH = \"search/SEARCH\";\nexport const SEARCH_SUCCESS = \"search/SEARCH_SUCCESS\";\nexport const SEARCH_FAILURE = \"search/SEARCH_FAILURE\";\n\nexport function searchStart() {\n  return {\n      type: SEARCH\n  };\n}\n\nexport function searchSuccess(title) {\n  return {\n      type: SEARCH_SUCCESS,\n      payload: title\n  };\n}\n\nexport function searchFailure(err) {\n    return {\n        type: SEARCH_FAILURE,\n        payload: err\n    };\n}\n\nexport function searchClear() {\n  return {\n    type: SEARCH_CLEAR\n  }\n}\n\n\n","\nexport const MOVIE_GET_ALL = \"movie/GET_ALL_START\";\nexport const MOVIE_GET_ALL_SUCCESS = \"movie/GET_ALL_SUCCESS\";\nexport const MOVIE_GET_ALL_FAILURE = \"movie/GET_ALL_FAILURE\";\n\nexport const MOVIE_FETCH_COVERS_START = \"movie/MOVIE_FETCH_COVERS_START\";\nexport const MOVIE_FETCH_COVERS_SUCCESS = \"movie/MOVIE_FETCH_COVERS_SUCCESS\";\nexport const MOVIE_FETCH_COVERS_FAILURE = \"movie/MOVIE_FETCH_COVERS_FAILURE\";\n\nexport const MOVIE_ADD_TO_WATCH = \"movie/ADD_TO_WATCH_START\";\nexport const MOVIE_ADD_TO_WATCH_SUCCESS = \"movie/ADD_TO_WATCH_SUCCESS\";\nexport const MOVIE_ADD_TO_WATCH_FAILURE = \"movie/ADD_TO_WATCH_FAILURE\";\n\nexport const MOVIE_ADD_TO_FAVORITES = \"movie/ADD_TO_FAVORITES_START\";\nexport const MOVIE_ADD_TO_FAVORITES_SUCCESS = \"movie/ADD_TO_FAVORITES_SUCCESS\";\nexport const MOVIE_ADD_TO_FAVORITES_FAILURE = \"movie/ADD_TO_FAVORITES_FAILURE\";\n\nexport const MOVIE_REMOVE_TO_WATCH = \"movie/REMOVE_TO_WATCH\";\n\nexport const MOVIE_SELECTION = \"movie/SELECTION\";\nexport const MOVIE_SELECTION_SUCCESS = \"movie/SELECTION_SUCCESS\";\nexport const MOVIE_SELECTION_FAILURE = \"movie/SELECTION_FAILURE\";\n\nexport const MOVIE_UPDATE_START = \"movie/MOVIE_UPDATE_START\";\nexport const MOVIE_UPDATE_SUCCESS = \"movie/MOVIE_UPDATE_SUCCESS\";\nexport const MOVIE_UPDATE_FAILURE = \"movie/MOVIE_UPDATE_FAILURE\";\n\nexport const MOVIE_DELETE_START = \"movie/MOVIE_DELETE_START\";\nexport const MOVIE_DELETE_SUCCESS = \"movie/MOVIE_DELETE_SUCCESS\";\nexport const MOVIE_DELETE_FAILURE = \"movie/MOVIE_DELETE_FAILURE\";\n\nexport const MOVIE_SELECTION_CLEAR = \"movie/SELECTION_CLEAR\";\n\nexport const SWITCH_LIBRARY_START = \"movie/SWITCH_LIBRARY_START\";\nexport const SWITCH_LIBRARY_SUCCESS = \"movie/SWITCH_LIBRARY_SUCCESS\";\nexport const SWITCH_LIBRARY_FAILURE = \"movie/SWITCH_LIBRARY_FAILURE\";\n\n\nexport function fetchCoversStart() {\n  return {\n      type: MOVIE_FETCH_COVERS_START,\n  };\n}\n\nexport function fetchCoversSuccess(movies) {\n  return {\n      type: MOVIE_FETCH_COVERS_SUCCESS,\n      payload: movies\n  };\n}\n\nexport function fetchCoversFailure(err) {\n  return {\n      type: MOVIE_FETCH_COVERS_FAILURE,\n      payload: err\n  };\n}\n\nexport function getAllStart() {\n  return {\n      type: MOVIE_GET_ALL,\n  };\n}\n\nexport function getAllSuccess(movies) {\n  return {\n      type: MOVIE_GET_ALL_SUCCESS,\n      payload: movies\n  };\n}\n\nexport function getAllFailure(err) {\n  return {\n      type: MOVIE_GET_ALL_FAILURE,\n      payload: err\n  };\n}\n\n\nexport function addToFavoritesSucces(movie) {\n  return {\n      type: MOVIE_ADD_TO_FAVORITES_SUCCESS,\n      payload: movie\n  };\n}\n\nexport function addToWatchStart(movie) {\n  return {\n      type: MOVIE_ADD_TO_WATCH,\n      payload: movie\n  };\n}\n\nexport function addToWatchSuccess(movie) {\n  return {\n      type: MOVIE_ADD_TO_WATCH_SUCCESS,\n      payload: movie\n  };\n}\n\nexport function addToWatchFailure(err) {\n  return {\n      type: MOVIE_ADD_TO_WATCH_FAILURE,\n      payload: err\n  };\n}\n\nexport function removeToWatch(movie) {\n  return {\n      type: MOVIE_REMOVE_TO_WATCH,\n      payload: movie\n  };\n}\n\nexport function movieSelection(movie) {\n  return {\n      type: MOVIE_SELECTION,\n      payload: movie\n  };\n}\n\nexport function movieSelectionClear() {\n  return {\n      type: MOVIE_SELECTION_CLEAR,\n  };\n}\n\n\nexport function updateMovieStart() {\n  return {\n      type: MOVIE_UPDATE_START,\n  };\n}\n\nexport function updateMovieSuccess(movie) {\n  return {\n      type: MOVIE_UPDATE_SUCCESS,\n      payload: movie\n  };\n}\n\n\nexport function updateMovieFailure() {\n  return {\n      type: MOVIE_UPDATE_FAILURE,\n  };\n}\n\n\nexport function switchLibraryStart() {\n  return {\n      type: SWITCH_LIBRARY_START,\n  };\n}\n\nexport function switchLibrarySuccess(movie) {\n  return {\n      type: SWITCH_LIBRARY_SUCCESS,\n      payload: movie\n  };\n}\n\nexport function switchLibraryFailure() {\n  return {\n      type: SWITCH_LIBRARY_FAILURE,\n  };\n}\n\n\nexport function deleteMovieStart() {\n  return {\n      type: MOVIE_DELETE_START,\n  };\n}\n\nexport function deleteMovieSuccess(movie) {\n  return {\n      type: MOVIE_DELETE_SUCCESS,\n      payload: movie\n  };\n}\n\n\nexport function deleteMovieFailure() {\n  return {\n      type: MOVIE_DELETE_FAILURE,\n  };\n}","import { SEARCH, SEARCH_SUCCESS, SEARCH_FAILURE, SEARCH_CLEAR } from \"../actions/search-actions\";\nimport { \n  MOVIE_ADD_TO_WATCH_SUCCESS, MOVIE_ADD_TO_FAVORITES_SUCCESS,\n  MOVIE_FETCH_COVERS_START, MOVIE_FETCH_COVERS_SUCCESS, MOVIE_FETCH_COVERS_FAILURE\n} from \"../actions/movie-actions\";\n\nconst initialState = {\n  search: {\n    isSearching: false,\n    fetched: []\n  },\n  movieSelected: undefined,\n  isFetching: false,\n  userMovies: [],\n  userMoviesFav: []\n};\n\nexport default function reducer(state = initialState, action = {}) {\n\n    console.log('Action: ', action.type);\n    if( action.payload) console.log('Payload: ', action.payload);\n\n    const newState = { ...state };\n\n    switch (action.type) {\n      case MOVIE_FETCH_COVERS_START: {\n        newState.userMovies = newState.userMovies.map( movie => ({ ...movie, isFetchinCover: true}));\n        return newState;\n      }\n      case MOVIE_FETCH_COVERS_SUCCESS: {\n        newState.userMovies = newState.userMovies.map(movie => {\n          return { \n            movieId: movie.id,\n            ...movie, \n            ...action.payload.find( payload => movie.movie_id === payload.id) \n          };\n        });\n        return newState;\n      }\n      case MOVIE_FETCH_COVERS_FAILURE: {\n        newState.userMovies = newState.userMovies.map( movie => {\n          movie.isFetchinCover = false;\n          movie.url = movie.url || './img/not_available.jpeg';\n          return movie;\n        });\n        return newState;\n      }\n      case MOVIE_ADD_TO_WATCH_SUCCESS: {\n        let alreadyIn = false;\n        newState.userMovies.forEach( m => {\n          if( action.payload.id === m.id) {\n            alreadyIn = true;\n          }\n        })\n        if(!alreadyIn) {\n          newState.userMovies.push(action.payload)\n        }\n        console.log(newState.userMovies)\n        return newState;\n      }\n      case MOVIE_ADD_TO_FAVORITES_SUCCESS: {\n        let alreadyIn = false;\n        newState.userMoviesFav.forEach( m => {\n          if( action.payload.id === m.id) {\n            alreadyIn = true;\n          }\n        })\n        if(!alreadyIn) {\n          newState.userMoviesFav.push(action.payload)\n        }\n        return newState;\n      }\n      case SEARCH: {\n        newState.search.isSearching = true;\n        return newState;\n      }\n      case SEARCH_SUCCESS: {\n        newState.search.isSearching = false;\n        newState.search.fetched = action.payload\n        return newState;\n      }\n      case SEARCH_CLEAR:\n      case SEARCH_FAILURE: {\n        newState.search.isSearching = false;\n        newState.search.fetched = [];\n        return newState;\n      }\n      default:\n        return state;\n    }\n}","export const getFetched = state => state.search.fetched;\nexport const getIsSearching = state => state.search.isSearching;","export const getMovieList = state => state.userMovies;\nexport const getFavList = state => state.userMoviesFav;\n\n","/* React imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/* Style */\nimport style from \"./movie-card.module.scss\";\n\n/* Component implementation */\nconst MovieCard = function(props) {\n  const background = {\n    backgroundImage: `url(${props.movie.url})`\n  };\n\n  const spacerImg = \"./img/movie-spacer.png\";\n  return (\n    <>\n      <div style={background} className={`${style.movieCard} ${props.movie.isFetchinCover ? style.fetching : ''}`}>\n        <img className={style.spacer} src={spacerImg} alt={props.movie.title} />\n      </div>\n    </> \n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.object\n};\n\nexport default MovieCard;\n","/* React import */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/* Reausable components */\nimport MovieCard from \"../../../components/MovieCard/movie-card-component\";\n\n/* Children components */\nimport style from \"./suggestion.module.scss\";\n\n/* Component implementation */\nconst Suggestion = function(props) {\n\n  const movie = { ...props.movie }\n\n  movie.url = movie.url ? `http://image.tmdb.org/t/p/${props.requiredWitdh}${movie.url}` : './img/not_available.jpeg';\n\n  const card = <div className={style.cardContainer}>\n      <MovieCard movie={movie} />\n    </div>;\n\n  const year = movie.year ? `(${movie.year})` : \"\";\n  const { addToLibrary, addToLibraryFav } = props.actions;\n  const starImg = \"./img/star.png\";\n  const eyeImg = \"./svg/eye.svg\";\n  console.log(addToLibrary)\n\n  return (\n    <article className={style.suggestion}>\n      {card}\n      <p className={style.title}>\n        {movie.title} <span>{year}</span>\n      </p>\n      <div className={`${style.icon} ${style.unseen}`}> <img className={style.star} onClick={ () => addToLibraryFav( { ...movie, watched: !!props.seen }) } src={starImg} alt=\"star favorites\" /> </div>\n      <div className={`${style.icon} ${style.seen}`}> <img className={style.star} onClick={ () => addToLibrary( { ...movie, watched: !!props.seen }) } src={eyeImg} alt=\"eye icon\" /> </div>\n    </article>\n  );\n};\n\n// TODO use shape see: https://reactjs.org/docs/typechecking-with-proptypes.html\n\nSuggestion.defaultProps = {\n  requiredWitdh: 'w92'\n}\n\nSuggestion.propTypes = {\n  movie: PropTypes.object.isRequired\n};\n\nexport default Suggestion;\n","/* React imports */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\n\n/* Reusable components */\n\n/* Children components */\nimport Suggestion from \"./Suggestion/suggestion-component\";\n\n/* Style */\nimport style from \"./search.module.scss\";\n\n/* Component implementation */\nconst Search = function(props) {\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  //updated after 1000 sec user stop typing\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\n\n  //fetch movies when debouncedSearchTerm updates\n  useEffect( () => {\n      if (debouncedSearchTerm) {\n        props.actions.searchMovies(searchTerm)\n      }\n    },\n    [debouncedSearchTerm]\n  );\n  \n  const placeholder = \"Search movie...\";\n  const name = \"title\";\n\n  const suggestionActions = {\n    addToLibrary: props.actions.addToLibrary,\n    addToLibraryFav: props.actions.addToFavorites,\n  }\n  \n  const suggestions = props.status.fetched.map((movie) => (\n    <Suggestion key={movie.id} movie={movie} actions={suggestionActions}/>\n  ));\n\n  const suggestionContainer = suggestions.length === 0 ? \n    \"\" : <div className={style.suggestionContainer}> {suggestions} </div>;\n  const deleteSearch = suggestions.length > 0 ? \n    <span className={style.clearSearch} \n      onClick={ () => {\n        setSearchTerm('');\n        props.actions.clearSearch();\n      }\n    }>X</span> : '';\n   \n  return (\n    <section className={style.section}>\n      <form className={style.form}>\n        {deleteSearch}\n        <input\n          className={style.formInput}\n          placeholder={placeholder}\n          onChange={e => setSearchTerm(e.target.value)}\n          name={name}\n          value={searchTerm}\n          autoComplete=\"off\"\n        />\n        {props.status.isSearching && <div>Searching ...</div>}\n\n      </form>\n\n      {suggestionContainer}\n    </section>\n  );\n};\n\nfunction useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        // Set debouncedValue to value passed in after the specified delay\n        setDebouncedValue(value);\n      }, delay);\n      // Return a cleanup function that will be called every time\n      // useEffect is re-called (if value changes).\n      // This prevents debouncedValue from changing if value is\n      // changed within the delay period. Timeout gets cleared and restarted.\n      return () => { clearTimeout(handler); };\n    },\n    [value] \n  );\n  return debouncedValue;\n}\n\nSearch.propTypes = {\n  actions: PropTypes.object.isRequired,\n  status: PropTypes.object.isRequired\n};\n\nexport default Search;\n","/* React import */\nimport React from \"react\";\n\n/* Style */\nimport style from \"./logo.module.scss\";\n\n/* Component implementation */\nconst Logo = () => (\n  <>\n    <img\n      className={style.logo}\n      alt={`Website Logo`}\n      src={`${process.env.PUBLIC_URL}/svg/logo.svg`}\n    />\n  </>\n);\n\nexport default Logo;\n","/* React imports */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/* Reusable components */\nimport MovieCard from \"../MovieCard/movie-card-component\";\n\n/* Style */\nimport style from \"./category.module.scss\";\n\n/* Component implementation */\nconst Category = function(props) {\n\n  const categoryName = props.status.name;\n  const isSeen = categoryName === 'Favorites';\n  const header = (\n    <header className={`${style.header} ${isSeen ? style.seenHeader : ''}`}>\n      <span className={`${style.headerSpan} ${isSeen ? style.seenSpan : ''}`} />\n      <span>{categoryName}</span> \n    </header>\n  );\n\n\n  const movies = props.status.list.map((movie) => {\n    return (  \n      <div className={`${style.movieContainer}`} key={movie.id || movie.movie_id} >\n        <MovieCard movie={movie} />\n      </div>\n    );\n  });\n\n  const moviesContainer = (\n    <article className={style.moviesContainer}>{movies}</article>\n  );\n\n  return (\n    <section className={style.section}>\n      {header}\n      {moviesContainer}\n    </section>\n  );\n};\n\nCategory.propTypes = {\n  movies: PropTypes.array,\n  selected: PropTypes.bool,\n  categoryName: PropTypes.string\n};\n\nexport default Category;\n","/* React imports */\nimport React from \"react\";\n\n/** Children components */\nimport Search from \"./Search/search-component\";\n\n/** Reusable components */\n// TODO find a way to use path from src. see:  https://stackoverflow.com/questions/44063592/react-import-root-path-helper\nimport Logo from \"../components/Logo/logo-component\";\nimport Category from \"../components/Category/category-component\";\n\n/* Style */\nimport style from \"./app.module.scss\";\n\n/* Component implementation */\nconst App = (props) => {\n  \n  const searchActions = {\n    addToLibrary: props.addToLibrary,\n    addToFavorites: props.addToFavorites,\n    searchMovies: props.searchMovies,\n    clearSearch: props.searchClear\n  }\n\n  const navbar = <nav className={style.navbar}> <Logo /> </nav>;\n\n  const search = <Search status={props.search} actions={searchActions}/>\n\n  let toWatchCategories, favCategories;\n  const spacer = <span className={style.spacer}></span>;\n\n  if(props.category.userMovies.length) {\n    const watched = {}\n    watched.name = `Watch List`;\n    watched.list = props.category.userMovies;\n    toWatchCategories = <Category status={watched}  />;\n  }\n\n  if(props.category.userMoviesFav.length) {\n    const toWatch = {}\n    toWatch.name = `Favorites`;\n    toWatch.list = props.category.userMoviesFav;\n    favCategories = <Category status={toWatch} />;\n  }\n\n  return (\n    <>\n      <div className={style.backImg} />\n\n      {/* \n        Following markup has been added t preload the movie card spacer.\n        Removing this would result in a spinner displacement\n      */}\n      <img src={\"./img/movie-spacer.png\"} alt={''} />\n\n      {navbar}\n\n      {search}\n      \n      <main className={style.main}>\n        {toWatchCategories}\n        {favCategories}\n        {spacer}\n      </main>\n\n    </>\n  );\n}\n\n\nexport default App;\n","import { connect } from \"react-redux\";\n\nimport { searchMovies } from \"../effects/search-effect\";\n\nimport { searchClear } from \"../actions/search-actions\";\n\nimport { getFetched, getIsSearching } from \"../selectors/search-selectors\";\n\nimport {  addToLibrary, addToFavorites } from \"../effects/movie-effect\";\n\nimport { \n  getMovieList,\n  getFavList\n} from \"../selectors/movie-selectors\";\n\nimport App from \"../../App/app-component\";\n\nconst mapDispatchToProps = {\n  addToLibrary, \n  addToFavorites,\n  searchMovies,\n  searchClear,\n};\n\nconst mapStateToProps = ({movieLibrary: state }) => {\n\n  return {\n    search: {\n      fetched: getFetched(state),\n      isSearching: getIsSearching(state),\n    },\n    category: {\n      userMovies: getMovieList(state),\n      userMoviesFav: getFavList(state),\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);","\nimport { \n    getAllStart, getAllSuccess, getAllFailure,\n    fetchCoversStart, fetchCoversSuccess, fetchCoversFailure,\n    addToWatchSuccess, addToFavoritesSucces\n} from '../actions/movie-actions'\n\nexport function getAllMovies() {\n    const token = localStorage.getItem('login-token')\n    const url = `https://nameless-tundra-74426.herokuapp.com/api/v1/movies` \n    const opt = { \n        method: 'GET', \n        headers:{ \n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    } \n    return async dispatch => {\n        dispatch(getAllStart()) \n        return fetch(url, opt)\n            .then((r) => {\n                if(r.ok) { \n                    return r.json()  \n                } \n                else {\n                    const serverError = 'Server not responding. Try later.' \n                    return r.json().then(r => {\n                        let unified = {} \n                        if (r.errors && Array.isArray(r.errors)) r.errors.forEach( item => { unified = { ...unified, ...item } }) \n                        if (r.errors && !Array.isArray(r.errors)) unified.err = r.errors.detail \n                        throw r.errors ? Object.keys(unified).map( i => `${i} ${unified[i]}.`).join(`\\n`) : serverError\n                    })\n                }\n            })\n            .then(r => r.data)\n            .then(m => { \n                dispatch(getAllSuccess(m)) \n                fetchCovers(dispatch, m) \n            })\n            .catch(err => { \n                console.log(err)\n                dispatch(getAllFailure(err)) \n            }) \n    } \n}\n\n// TODOS should be renamed fetchDeatails\nasync function fetchCovers(dispatch, movies) {\n    const apiKey = '5b22a10bb7349a0914d536d28d20547a' \n    dispatch(fetchCoversStart(movies))\n    const url = `https://api.themoviedb.org/3/movie/` \n    const opt = { \n        method: 'GET', \n        headers:{ 'Content-Type': 'application/json' }\n    }\n    Promise.all(\n        movies.map( m => {\n            return fetch(`${url}${m.movie_id}?api_key=${apiKey}&append_to_response=credits`, opt) \n                .then( r  => r.ok ? r.json() : { id: m.movie_id } ) \n        })\n    ).then( movies => {\n        movies = movies.map( movie => {\n            let director = '' \n            let cast = [] \n            if(movie.credits) {\n                director = movie.credits.cast ? movie.credits.crew.find(i => i.job === 'Director') : director \n                cast = movie.credits.cast ? movie.credits.cast.slice(0, 5) : cast \n                cast = cast.map( char => ({\n                    name: char.name, \n                    id: char.id,\n                    cover: char.profile_path ? `http://image.tmdb.org/t/p/w92/${char.profile_path}` : ''\n                })) \n            }\n            return {\n                id: movie.id, \n                year: movie.release_date ?  movie.release_date.substring(0, 4) : '',\n                overview: movie.overview, \n                title: movie.title,\n                url: movie.poster_path ? `http://image.tmdb.org/t/p/w342/${movie.poster_path}` : './img/not_available.jpeg',\n                rating: movie.vote_average,\n                isFetchinCover: false,\n                director,\n                cast\n            }\n        })\n        dispatch(fetchCoversSuccess(movies))\n    })\n    .catch( err => { \n        //TODOS should provide list of movies with cover linking to the img/not_available\n        console.log(err)\n        dispatch(fetchCoversFailure(err))\n    })\n}\n\nexport function addToLibrary(movie) {\n    return async dispatch => {\n        return dispatch(addToWatchSuccess( {...movie, isFetchinCover: false })) \n    } \n}\n\n\nexport function addToFavorites(movie) {\n    return async dispatch => {\n        return dispatch(addToFavoritesSucces( {...movie, isFetchinCover: false })) \n    } \n}\n","\nimport { searchStart, searchSuccess, searchFailure } from '../actions/search-actions'\n\n\nexport function searchMovies(movieTitle) {\n    const apiKey = '5b22a10bb7349a0914d536d28d20547a';\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${movieTitle}&language=en`;\n    const opt = { method: 'GET' };\n    return async dispatch => {\n        dispatch(searchStart());\n        return fetch( url, opt)\n            .then(r => r.json())\n            .then(r => r.results)\n            .then(r => {\n                const suggestion = r\n                    .filter( movie => movie.original_language === 'en' )\n                    .map( movie => ({\n                        id: movie.id,\n                        title: movie.original_title,\n                        year: movie.release_date.substring(0,4),\n                        url: movie.poster_path\n                    }));\n                dispatch(searchSuccess(suggestion)) \n            })\n            .catch(r => { dispatch(searchFailure(r)) });\n    };\n\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport thunkMiddleware from \"redux-thunk\";\n\nimport libraryReducer from \"./store/reducers/movie-library-reducer\";\n\nimport App from \"./store/containers/app-container\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  movieLibrary: libraryReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"category_section__1ObYf\",\"header\":\"category_header__2E1K2\",\"headerSpan\":\"category_headerSpan__2wDl3\",\"seenHeader\":\"category_seenHeader__2xClj\",\"seenSpan\":\"category_seenSpan__3B8R5\",\"movieContainer\":\"category_movieContainer__3BRP1\",\"movieSelected\":\"category_movieSelected__2Sxlg\",\"moviesContainer\":\"category_moviesContainer__28tmA\",\"leftArrow\":\"category_leftArrow__v88HS\",\"rightArrow\":\"category_rightArrow__1TfX2\",\"about\":\"category_about__1SgeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"search_section__2Wbtz\",\"form\":\"search_form__3vV5A\",\"formInput\":\"search_formInput__1Tzeo\",\"suggestionContainer\":\"search_suggestionContainer__1DNo4\",\"clearSearch\":\"search_clearSearch__oOGsd\"};"],"sourceRoot":""}